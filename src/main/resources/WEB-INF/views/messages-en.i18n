# messages-en.i18n

validation.manager.identifierNumber = The identifier number must follow the pattern ^[A-Z]{2,3}\d{6}$

validation.leg.flightNumber = This code must be composed of the airline's IATA code followed by four digits, unique, the pattern ^[A-Z]{2}\\d{4}$

validation.airport.code = The code of an airport must follow the pattern ^[A-Z]{3}$
validation.airport.contactPhoneNumber = The contact phone number must follow the pattern ^\\+?\\d{6,15}$

validation.airline.code = The code of an airline must follow the pattern ^[A-Z]{3}$
validation.airline.phoneNumber = The phone number must follow the pattern ^\\+?\\d{6,15}$

validation.trackingLog.mandatory-Resolution = The resolution of an accepted or rejected log can not be null
validation.trackingLog.resolution-Not-Taken = The resolution of a log 100% resolved has to be accepted o rejected
validation.trackingLog.resolution-Taken = The status of a log not 100% resolved has to be pending
validation.trackingLog.ascending-percentage = The resolution percentage must be monotonically increasing.

validation.service.promotionCode = The promotion code's last two digits must correspond to the current year
validation.service.promotionCode2 = The promotion code of a service must follow the pattern ^[A-Z]{4}-[0-9]{2}$
validation.service.promotionCode3 = The promotion code of a service must be unique

validation.maintenanceRecords.nextInspectionDate = The next inspection date must be after the current maintenance moment
validation.maintenanceRecords.isPublishable = The maintenance record cannot have any unpublished tasks and should have at least one published task
validation.maintenanceRecords.isCompleted = The maintenance record should be completed before being published
validation.maintenanceRecords.nextInspectionDateNotNull = The next inspection date may not be null

validation.technicians.licenseNumber = The license number of a technician must follow the pattern ^[A-Z]{2-3}\\d{6}$
validation.technicians.phoneNumber = The phone number of a technician must follow the pattern ^\\+?\\d{6,15}$

validation.flightCrewMember.codePattern = The employee code must follow the pattern ^[A-Z]{2,3}\\d{6}$
validation.flightCrewMember.codeInitials = The employee code must start with the initials of the name and surname of the employee
validation.flightCrewMember.codeNotUnique = The employee code must be unique

validation.customer.uniqueIdentifier = The identifier must be unique

administrator.aircraft.create.null-airline = The airline cannot be null
validation.customer.uniqueIdentifier.message = There is another aircraft with the same registration number

validation.task.priority = The priority must be a number between 0 and 10
validation.task.estimatedDuration = The estimated duration must be a number between 0 and 1000

validation.technician.licenseNumberNotUnique = The license number must be unique
validation.technician.licenseNumberNotUnique = The license number must be unique

validation.flightAssignment.pastLegPublished = The published assignment must be linked to a leg that has not arrived
validation.flightAssignment.memberWithSimultaneousLegs = A crew member can not be assigned to multiple simultaneous legs 
validation.flightAssignment.alreadyHasPilot = The leg of the assignment can not have multiple pilots
validation.flightAssignment.alreadyHasCopilot = The leg of the assignment can not have multiple copilots
validation.flightAssignment.legNotExists = The leg Id could not be found, select a correct one

validation.activityLog.legHasNotEnded = The leg linked to the assignment in the activity log has to have ended
validation.activityLog.assignmentIsNotPublished = The activity log's flight assignment must be published

